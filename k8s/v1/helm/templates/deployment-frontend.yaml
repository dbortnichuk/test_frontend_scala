apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.frontend.name }}
  labels:
    name: {{ .Values.frontend.name }}
spec:
  replicas: {{ .Values.frontend.replicas.min }}
  selector:
    matchLabels:
      name: {{ .Values.frontend.name }}
  template:
    metadata:
      labels:
        name: {{ .Values.frontend.name }}
      name: {{ .Values.frontend.name }}
      namespace: default
    spec:
      containers:
        - name: {{ .Values.frontend.name }}
          image: {{ .Values.frontend.image }}
          env: # override app params via env vars
            - name: FRONTEND_PORT
              value: "9100"
            - name: FRONTEND_APP_VERSION
              value: "456"
            - name: BACKEND_TARGET_HOST # where to look for backend
              #              value: "backend-scala-clusterip" # backend service name will be used as internal DNS name of the service
              valueFrom:
                configMapKeyRef:
                  name: shared
                  key: BACKEND_TARGET_HOST
            - name: BACKEND_TARGET_PORT
              valueFrom:
                configMapKeyRef:
                  name: shared
                  key: BACKEND_TARGET_PORT
            - name: BACKEND_API_KEY
              valueFrom:
                secretKeyRef:
                  name: shared
                  key: BACKEND_API_KEY
          #          envFrom: # inject all vars from secret
          #            - secretRef:
          #                name: shared
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.frontend.port }}
            initialDelaySeconds: 2
            periodSeconds: 20
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"