apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-scala
  labels:
    name: backend-scala
spec:
  replicas: 1
  selector:
    matchLabels:
      name: backend-scala
  template:
    metadata:
      labels:
        name: backend-scala
      name: backend-scala
      namespace: default
    spec:
      containers:
        - name: backend-scala
          image: dbortnichuk/backend_scala:latest
          env: # override app params via env vars
            - name: BACKEND_PORT
              value: "9090"
            - name: BACKEND_APP_VERSION
              value: "123"
            - name: BACKEND_SIMPLE_DATA_PATH
              value: "/configmap-shared/shared.properties"
            - name: DB_MYSQL_HOST # where to look for backend
               valueFrom:
                  configMapKeyRef:
                    name: shared
                    key: DB_MYSQL_HOST
            - name: DB_MYSQL_PORT
              valueFrom:
                configMapKeyRef:
                  name: shared
                  key: DB_MYSQL_PORT
          readinessProbe:
            httpGet:
              path: /health
              port: 9090
            initialDelaySeconds: 2
            periodSeconds: 20
          volumeMounts:
            - name: configmap-shared
              mountPath: "/configmap-shared"
              readOnly: true
      volumes: # mount by name in volumeMounts
        # You set volumes at the Pod level, then mount them into containers inside that Pod
        - name: configmap-shared
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: shared
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "shared.properties"
                path: "shared.properties"
#        - name: secret-shared # each entry will be in separate file
#          secret:
#            secretName: shared